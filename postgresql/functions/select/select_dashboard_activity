CREATE OR REPLACE FUNCTION public.select_dashboard_activity(
    arg_account_index INTEGER,
    arg_workspace_key TEXT,
    arg_activity_index BIGINT)

    RETURNS TABLE(
        tb_code INTEGER,
        tb_account_name VARCHAR(32),
        tb_activity_command INTEGER,
        tb_activity_data TEXT,
        tb_activity_timestamp TIMESTAMP,
        tb_activity_index BIGINT)

AS
$$
DECLARE
    r RECORD;
    v_query BOOLEAN;
    v_visible_project_ids INTEGER[];
    MAXIMUM_ROW INTEGER := 100;
BEGIN
    FOR r IN
	    (SELECT project.visibility, project.id FROM public.project
            INNER JOIN public.ref_account_workspace ON project.belonged_workspace_id = ref_account_workspace.id_workspace
            INNER JOIN public.workspace ON workspace.id = ref_account_workspace.id_workspace
			WHERE ref_account_workspace.id_account = arg_account_index AND
			      workspace.access_key = arg_workspace_key)
	LOOP
        CASE r.visibility

            WHEN 0 THEN -- public project --
                v_visible_project_ids := array_append(v_visible_project_ids, r.id); -- append visible project_index

            WHEN 1 THEN -- private project --
                v_query := (SELECT is_available_private_project FROM public.is_available_private_project(
                    r.id,arg_account_index));

                IF v_query IS TRUE THEN -- visible project --

                    v_visible_project_ids := array_append(v_visible_project_ids, r.id); -- append visible project_index
                END IF;

        END CASE;
	END LOOP;

    IF arg_activity_index = 0 THEN  -- first call from web
        RETURN QUERY (
            SELECT 0,
                   account.account_name,
                   dashboard_activity.activity_command,
                   dashboard_activity.data,
                   dashboard_activity.timestamp,
                   public.dashboard_activity.index
                FROM public.dashboard_activity
                INNER JOIN public.account ON account.id = dashboard_activity.account_index
                WHERE public.dashboard_activity.project_index = ANY(v_visible_project_ids)
                ORDER BY timestamp DESC LIMIT MAXIMUM_ROW);

    ELSE    -- second or more call from web
        RETURN QUERY (
            SELECT 0,
                   account.account_name,
                   dashboard_activity.activity_command,
                   dashboard_activity.data,
                   dashboard_activity.timestamp,
                   public.dashboard_activity.index
                FROM public.dashboard_activity
                INNER JOIN public.account ON account.id = dashboard_activity.account_index
                WHERE dashboard_activity.index < arg_activity_index AND
                      public.dashboard_activity.project_index = ANY(v_visible_project_ids)
                ORDER BY timestamp DESC LIMIT MAXIMUM_ROW);
    END IF;
END;
$$

LANGUAGE 'plpgsql';
