CREATE OR REPLACE FUNCTION public.get_all_workspaces_info(
	arg_account_index integer)
    RETURNS TABLE(
        tb_workspace_id_key TEXT,
        tb_workspace_name CHARACTER VARYING,
        tb_workspace_type SMALLINT,
        tb_workspace_account_permission SMALLINT,
        tb_workspace_child_projects INTEGER,
        tb_workspace_child_belonged_projects INTEGER,
        tb_workspace_child_reports INTEGER,
        tb_workspace_owner_email TEXT)
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
    
AS $BODY$
DECLARE
	check_query BOOLEAN := FALSE;
	var_record RECORD;
	
BEGIN
	check_query := (SELECT is_available_accountsession FROM public.is_available_accountsession(arg_account_index));
	IF check_query IS FALSE THEN
		tb_workspace_id_key := '-1';
		RETURN NEXT ;
	ELSE
		FOR var_record IN
			SELECT public.workspace.id,
			       public.workspace.access_key,
			       public.workspace.name,
			       public.workspace.visibility,
			       public.ref_account_workspace.account_permission,
			       public.workspace.admin_id
						FROM public.account 
					INNER JOIN public.ref_account_workspace ON public.account.id = public.ref_account_workspace.id_account
					INNER JOIN public.workspace ON public.ref_account_workspace.id_workspace = public.workspace.id 
					WHERE public.account.id = arg_account_index
		LOOP
			-- workspace index, name, visibility, account_permission --
			tb_workspace_id_key := var_record.access_key;
			tb_workspace_name := var_record.name;
			tb_workspace_type := var_record.visibility;
			tb_workspace_account_permission := var_record.account_permission;
			
			-- all project nums --
			tb_workspace_child_projects := 
				(SELECT COUNT(*) FROM public.project
					WHERE public.project.belonged_workspace_id = var_record.id);

			-- only belonged project --
			tb_workspace_child_belonged_projects :=
				(SELECT COUNT(*) FROM public.select_project_in_workspace(arg_account_index,var_record.id));
				
			-- Report nums --
			tb_workspace_child_reports := 
				(SELECT COUNT(*) FROM public.project
					INNER JOIN public.report on public.project.id = public.report.belonged_project_id
					WHERE public.project.belonged_workspace_id = var_record.id);

			tb_workspace_owner_email :=
			    (SELECT account_id FROM public.account
			        WHERE id = var_record.admin_id);
			
			RETURN NEXT;
		END LOOP;
		
		
		/*
		-- member names --
		SELECT public.account.account_name FROM public.workspace
			INNER JOIN public.ref_account_workspace ON public.ref_account_workspace.id_workspace = public.workspace.id
			INNER JOIN public.account ON public.account.id = public.ref_account_workspace.id_account
			WHERE public.workspace.id = 5;
		*/
		
	END IF;
END;
$BODY$;

DROP FUNCTION get_all_workspaces_info(integer);

