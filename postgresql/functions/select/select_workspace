CREATE OR REPLACE FUNCTION getworkspaceinfosession(arg_account_index INTEGER)
    RETURNS TABLE(workspace_id_key TEXT, workspace_name CHARACTER VARYING)
    language plpgsql
as
$$
DECLARE
	check_query BOOLEAN := FALSE;
	return_table RECORD;
BEGIN
	check_query := (SELECT is_available_accountsession from public.is_available_accountsession(arg_account_index));
	IF check_query IS FALSE THEN
		workspace_id_key := '-1';
		RETURN NEXT;
	ELSE
		RETURN QUERY (SELECT public.workspace.access_key, public.workspace.name FROM public.account
					  	INNER JOIN public.ref_account_workspace on public.account.id = public.ref_account_workspace.id_account
					 	INNER JOIN public.workspace ON public.ref_account_workspace.id_workspace =public.workspace.id
					  	WHERE public.account.id = arg_account_index);

	/*
	-- worksapce index, 이름, visibility, 사용자 권한 --
	select 	public.workspace.id,
			public.workspace.name,
			public.workspace.visibility,
			public.ref_account_workspace.account_permission
				from public.account
			inner join public.ref_account_workspace on public.account.id = public.ref_account_workspace.id_account
			inner join public.workspace on public.ref_account_workspace.id_workspace =public.workspace.id
			where public.account.id = 9

	-- 레포트 갯수 --
	SELECT COUNT(*) FROM public.project
		INNER JOIN public.report on public.project.id = public.report.belonged_project_id
		WHERE public.project.belonged_workspace_id = 5

	-- 프로젝트 갯수 --
	SELECT COUNT(*) FROM public.project
		WHERE public.project.belonged_workspace_id = 5

	-- 멤버 name들 --
	SELECT public.account.account_name FROM public.workspace
		INNER JOIN public.ref_account_workspace ON public.ref_account_workspace.id_workspace = public.workspace.id
		INNER JOIN public.account ON public.account.id = public.ref_account_workspace.id_account
		WHERE public.workspace.id = 5
	*/

	END IF;
END;
$$;
