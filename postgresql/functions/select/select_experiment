create or replace function getexperimentsession(arg_belonged_project_id_key text)
    returns TABLE(
        tb_experiment_id_key text,
        tb_experiment_names character varying,
        tb_experiment_logs text,
        tb_experiment_output_log text,
        tb_experiment_system_metrics text,
        tb_experiment_hyper_parameter text,
        tb_experiment_requirements text,
        tb_experiment_code_blob_id bigint,
        tb_experiment_image_blob text,
        tb_experiment_model_blob text,
        tb_experiment_creator character varying,
        tb_experiment_created_dated timestamp without time zone,
        tb_experiment_status smallint,
        tb_experiment_chart_config text,
        tb_experiment_run_path TEXT,
        tb_experiment_finished_date TIMESTAMP WITHOUT TIME ZONE,
        tb_experiment_description TEXT)
    language plpgsql
as
$$
DECLARE
    v_project_id INTEGER;
BEGIN

    SELECT id FROM public.project
        WHERE public.project.access_key = arg_belonged_project_id_key
        INTO v_project_id;

    IF v_project_id IS NOT NULL THEN
        RETURN QUERY
            SELECT DISTINCT public.experiment.access_key,
                public.experiment.name,
				array_to_json(public.experiment.log)::text,
				array_to_string(public.experiment.output_log, E'\n', '*') ,
				array_to_string(public.experiment.system_metrics, E'\n', '*'),
				public.experiment.hyper_parameter,
				public.experiment.requirements,
				public.experiment.code_blob_id,
				array_to_string(public.experiment.image_blob_id, E'\n', '*'),
				array_to_string(public.experiment.model_blob_id, E'\n', '*'),
				public.account.account_id,
				public.experiment.created_date,
                public.experiment.experiment_state,
                public.experiment.chart_config,
                public.experiment.run_path,
                public.experiment.finished_date,
                public.experiment.description
					FROM public.experiment
                LEFT JOIN public.project ON public.experiment.belonged_project_id = public.project.id
                LEFT JOIN public.account ON public.experiment.creator = public.account.id
                WHERE public.project.id = v_project_id
                ORDER BY public.experiment.created_date DESC;
    ELSE
        RETURN NEXT;
    END IF;
END;
$$;

alter function getexperimentsession(text) owner to digger;

DROP FUNCTION getexperimentsession(text);
SELECT * FROM public.experiment;

