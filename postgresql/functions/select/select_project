CREATE OR REPLACE FUNCTION public.select_project_in_workspace(
	arg_account_index integer,
	arg_belonged_workspace_index integer)
    RETURNS TABLE(
        tb_id integer,
        tb_name character varying,
        tb_description character varying,
        tb_creator_email TEXT,
        tb_admin_email TEXT,
        tb_created_date timestamp without time zone,
        tb_modified_date timestamp without time zone,
        tb_visibility smallint,
        tb_user_name_array text,
        tb_user_email_array text,
        tb_user_permission_array text,
        tb_user_count integer,
        tb_experiment_count integer,
        tb_report_count integer)
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE
    ROWS 1000

AS $BODY$
DECLARE
	r RECORD;
    v_account_name TEXT;
    v_account_email TEXT;
    v_account_permission TEXT;
    v_account_counter INTEGER;
    return_code INTEGER;
BEGIN
	FOR r IN (SELECT * FROM public.project
			  	where belonged_workspace_id =arg_belonged_workspace_index)
	LOOP
		SELECT * FROM public.select_account_info_from_project(r.id, r.visibility, arg_account_index)
            INTO return_code, v_account_name, v_account_email, v_account_permission, v_account_counter;

		-- If got an information from above function, fill the return table --
		IF return_code = 0 THEN
            tb_id := r.id;
            tb_name := r.name;
            tb_description := r.description;
            tb_created_date :=r.created_date;
            tb_modified_date :=r.modified_date;
            tb_visibility :=r.visibility;

            tb_user_name_array := v_account_name;
            tb_user_email_array := v_account_email;
            tb_user_permission_array := v_account_permission;
            tb_user_count := v_account_counter;

            tb_creator_email := (SELECT DISTINCT public.account.account_id FROM public.account
                                    INNER JOIN public.project ON public.account.id = public.project.creator_id
                                    WHERE public.account.id = r.creator_id AND public.project.creator_id = r.creator_id);
            tb_admin_email := (SELECT DISTINCT public.account.account_id FROM public.account
                                    INNER JOIN public.project ON public.account.id = public.project.administrator_id
                                    WHERE public.account.id = r.administrator_id AND public.project.creator_id = r.administrator_id);

            tb_experiment_count := (SELECT COUNT(*) FROM public.experiment WHERE belonged_project_id=r.id);
            tb_report_count :=(SELECT COUNT(*) FROM public.report WHERE belonged_project_id=r.id);
            RETURN NEXT;
        END IF;
	END LOOP;
END;
$BODY$;