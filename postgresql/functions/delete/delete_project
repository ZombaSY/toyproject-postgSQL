CREATE OR REPLACE FUNCTION public.delete_project(
	arg_account_index INTEGER,
	arg_project_index INTEGER,
	ignore_permission BOOLEAN)
    RETURNS TABLE(
        tb_code INTEGER,
        tb_container_name TEXT,
        tb_cloud_path TEXT)
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE

AS $BODY$
DECLARE
    v_record RECORD;
    v_workspace_id INTEGER;
    v_project_name TEXT;
    v_container_name TEXT;
    v_cloud_paths TEXT;
    v_deleted_blob_sizes BIGINT := 0;
    v_loop_counter INTEGER := 0;
    check_query INTEGER;
BEGIN

    ------------------------- Called from external function -------------------------
    IF ignore_permission = FALSE THEN

        -- Check has permission --
        check_query :=
            (SELECT administrator_id FROM public.project
                WHERE public.project.administrator_id = arg_account_index AND id = arg_project_index);

        IF check_query IS NOT NULL THEN

            -- Release account from project --
            DELETE FROM public.ref_account_project
                WHERE id_project = arg_project_index;

            -- Delete Project --
            DELETE FROM public.project
                WHERE id = arg_project_index
                RETURNING belonged_workspace_id, name INTO v_workspace_id, v_project_name;

            IF v_workspace_id IS NULL THEN
                tb_code := -1;  -- No row deleted --
                RETURN NEXT;
            END IF;

            v_container_name :=
                (SELECT cloud_container_name FROM public.azure_cloud_container
                    WHERE workspace_id = v_workspace_id);

            -- Delete blob referencing deleted project --
            FOR v_record IN
                DELETE FROM public.azure_cloud_blob
                    WHERE container_name = v_container_name AND cloud_path LIKE v_project_name || '%'
                    RETURNING cloud_path, blob_size
            LOOP

            IF v_loop_counter = 0 THEN
                v_cloud_paths := v_record.cloud_path;
            ELSE
                v_cloud_paths := v_cloud_paths || ',' || v_record.cloud_path;
            END IF;

            v_deleted_blob_sizes := v_deleted_blob_sizes + v_record.blob_size;
            v_loop_counter := v_loop_counter + 1;
            END LOOP;

            -- Update container left usage --
            UPDATE public.azure_cloud_container
                SET storage_usage = storage_usage - v_deleted_blob_sizes
                WHERE cloud_container_name = v_container_name;

            -- Returning blob cloud paths to remove real blobs in azure cloud server --
            tb_code := 0;
            tb_cloud_path := v_cloud_paths;
            tb_container_name := v_container_name;
            RETURN NEXT;
        ELSE
            tb_code := -100;    -- Permission denied --
            RETURN NEXT;
        END IF;

    ------------------------- Called from internal function -------------------------
    ELSE

        -- Release account from project --
        DELETE FROM public.ref_account_project
            WHERE id_project = arg_project_index;

        -- Delete Project --
        DELETE FROM public.project
            WHERE id = arg_project_index
            RETURNING belonged_workspace_id, name INTO v_workspace_id, v_project_name;

        v_container_name :=
            (SELECT cloud_container_name FROM public.azure_cloud_container
                WHERE workspace_id = v_workspace_id);

        -- Delete blob referencing deleted project --
        FOR v_record IN
            DELETE FROM public.azure_cloud_blob
                WHERE container_name = v_container_name AND cloud_path LIKE quote_ident(v_project_name || '%')
                RETURNING cloud_path, blob_size
        LOOP

        IF v_loop_counter = 0 THEN
            v_cloud_paths := v_record.cloud_path;
        ELSE
            v_cloud_paths := v_cloud_paths || ',' || v_record.cloud_path;
        END IF;

        v_deleted_blob_sizes := v_deleted_blob_sizes + v_record.blob_size;
        v_loop_counter := v_loop_counter + 1;
        END LOOP;

        -- Update container left usage --
        UPDATE public.azure_cloud_container
            SET storage_usage = storage_usage - v_deleted_blob_sizes
            WHERE cloud_container_name = v_container_name;

        -- Returning blob cloud paths to remove real blobs in azure cloud server --
        tb_code := 0;
        tb_cloud_path := v_cloud_paths;
        tb_container_name := v_container_name;
        RETURN NEXT;
    END IF;
END;
$BODY$;
