CREATE OR REPLACE FUNCTION public.update_project_settings(
	arg_account_index INTEGER,
	arg_project_index_key TEXT,
	arg_project_visibility INTEGER,
	arg_project_name TEXT,
	arg_project_description TEXT)
    RETURNS TABLE(
        tb_code INTEGER,
        tb_project_id INTEGER,
        tb_workspace_id INTEGER)
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE

AS $BODY$
DECLARE
	v_user_permission INTEGER;
    v_project_index INTEGER;
    v_workspace_index INTEGER;
    v_user_state INTEGER;
	return_code INTEGER;
BEGIN
	-- Check account's permission --
    SELECT user_permission, public.project.id FROM public.ref_account_project
        INNER JOIN public.project ON public.project.id = public.ref_account_project.id_project
        WHERE id_account = arg_account_index AND access_key = arg_project_index_key
	    INTO v_user_permission, v_project_index;

	IF v_user_permission = 1 THEN	-- Is Maintainer --

        BEGIN
            -- Update project settings --
            UPDATE public.project
                SET visibility = arg_project_visibility, name = arg_project_name, description = arg_project_description
                WHERE public.project.id = v_project_index
                RETURNING belonged_workspace_id INTO v_workspace_index;

            EXCEPTION
                WHEN SQLSTATE '23505' THEN
                    tb_code := 100;
                    RETURN NEXT;
        END;

		CASE arg_project_visibility
			WHEN 0 THEN
			    v_user_state := 0;
			WHEN 1 THEN
			    v_user_state := 1;
			ELSE
			    tb_code := -101;    -- Invalid visibility parameter --
			    RETURN NEXT;
		END CASE;

		-- Change user_state who already belonged to projects --
		UPDATE public.ref_account_project
			SET user_state = v_user_state
			WHERE id_project = v_project_index;

		return_code := 0;

        tb_code = return_code;
        tb_project_id = v_project_index;
        tb_workspace_id = v_workspace_index;
		RETURN NEXT;
	ELSE
		tb_code := -100;	-- Permission Denied --
		RETURN NEXT;
	END IF;
END;
$BODY$;
