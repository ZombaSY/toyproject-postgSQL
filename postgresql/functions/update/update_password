CREATE OR REPLACE FUNCTION public.changepassword(
	arg_password character,
	arg_newpassword character,
	arg_account_index integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE

AS $BODY$
DECLARE
	check_query boolean;
BEGIN
	check_query  := (SELECT * FROM public.is_available_account(arg_account_index,arg_password));
	IF check_query IS true then
		UPDATE public.account SET account_pwd = arg_newpassword where id= arg_account_index;
		RETURN 0;
	ELSE
		RETURN 401;
	END IF;
END;$BODY$;

ALTER FUNCTION public.changepassword(character, character, integer)
    OWNER TO digger;


--- Overload in ForgotPassword -------------
CREATE OR REPLACE FUNCTION public.changepassword(
	arg_new_password TEXT,
	arg_email_address TEXT)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE

AS $BODY$
DECLARE
	v_counter INTEGER;
    return_code INTEGER := 0;
BEGIN
	UPDATE public.account
        SET account_pwd = arg_new_password
        WHERE account_id = arg_email_address;
    GET DIAGNOSTICS v_counter = ROW_COUNT;

	return_code := 0;

	IF v_counter = 0 THEN
        return_code := -100;
    END IF;

	RETURN return_code;
END;$BODY$;
