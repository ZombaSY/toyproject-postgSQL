CREATE OR REPLACE FUNCTION createworkspace(
    arg_account_index INTEGER,
    arg_workspace_name CHARACTER VARYING,
    arg_visibility INTEGER,
    arg_cloud_container_name CHARACTER VARYING,
    arg_account_permission INTEGER)
    RETURNS INTEGER
    language plpgsql
as
$$
DECLARE
	check_query INTEGER:= -1;
	cur_id_workspace INTEGER;
	cur_id_account INTEGER;
	select_query INTEGER;
	check_name CHARACTER varying(32);
    is_available_access_key BOOL;
    v_random_string TEXT;
BEGIN
	select_query := (SELECT id FROM public.account
					 	WHERE id = arg_account_index);
	IF select_query is NULL THEN
		check_query := 123;
		return check_query;
	ELSE

		check_name := (SELECT name FROM public.workspace
					   	INNER JOIN public.ref_account_workspace ON public.workspace.id = public.ref_account_workspace.id_workspace
					   		WHERE public.ref_account_workspace.id_account = select_query AND
					   		      public.workspace.visibility = arg_visibility AND
					   		      public.workspace.name=arg_workspace_name);

		IF check_name is NULL THEN

            -- Generate unique access key --
            WHILE is_available_access_key IS NOT TRUE
            LOOP
                v_random_string := (SELECT * FROM public.generate_random_string(16));
                IF v_random_string IN
                    (SELECT access_key FROM public.workspace) THEN
                    RAISE NOTICE 'access key is already in DB. Generate again.';
                ELSE
                    is_available_access_key := TRUE;
                END IF;
            END LOOP;

            -- Create workspace --
			INSERT INTO public.workspace(name,visibility, admin_id, access_key)
				VALUES (arg_workspace_name, arg_visibility, arg_account_index, v_random_string)
				RETURNING id INTO cur_id_workspace;

            -- Update default workspace when created new workspace --
			UPDATE public.account set default_workspace = cur_id_workspace
				WHERE id = select_query
			    RETURNING id INTO cur_id_account;

            -- Insert account to workspace --
			INSERT INTO public.ref_account_workspace(id_account, id_workspace, account_permission)
				VALUES (cur_id_account, cur_id_workspace, arg_account_permission);

            -- Create azure cloud container in DB --
			INSERT INTO public.azure_cloud_container(cloud_container_name, workspace_id)
				VALUES (arg_cloud_container_name, cur_id_workspace);
			check_query := 0;
		ELSE
			check_query := 170;
		END IF;
		return check_query;
	END IF;
END;
$$;

