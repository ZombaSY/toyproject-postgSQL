create or replace function createprojectsession(
    arg_account_index integer,
    arg_project_name character,
    arg_belonged_workspace_id_key text,
    arg_description character,
    arg_visibility integer)

    returns TABLE(
        tb_code integer,
        tb_project_key text,
        tb_project_id INTEGER,
        tb_workspace_id INTEGER)
    language plpgsql
as
$$
DECLARE
	check_workspace BOOLEAN;
	is_available_account BOOLEAN;
	cur_project_id INTEGER;
    v_random_string TEXT;
    is_available_access_key BOOLEAN;
    v_workspace_index INTEGER;
BEGIN
	is_available_account := (SELECT * FROM public.is_available_accountsession(arg_account_index));

	IF is_available_account IS TRUE THEN
	    v_workspace_index :=
	        (SELECT id FROM public.workspace WHERE access_key = arg_belonged_workspace_id_key);
		check_workspace := (SELECT * FROM public.is_available_ref_account_workspace(arg_account_index, v_workspace_index));
		IF check_workspace IS TRUE THEN
			BEGIN
			     -- Generate unique access key --
                WHILE is_available_access_key IS NOT TRUE
                LOOP
                    v_random_string := (SELECT * FROM public.generate_random_string(16));
                    IF v_random_string IN
                        (SELECT access_key FROM public.project) THEN
                        RAISE NOTICE 'access key is already in DB. Generate again.';
                    ELSE
                        is_available_access_key := TRUE;
                    END IF;
                END LOOP;

			     -- Create Project --
				INSERT INTO public.project(
					name, belonged_workspace_id, description, creator_id, administrator_id, visibility, access_key)
					VALUES (arg_project_name, v_workspace_index, arg_description, arg_account_index, arg_account_index, arg_visibility, v_random_string)
					RETURNING id INTO cur_project_id;
				IF arg_visibility != 0 THEN
					INSERT INTO public.ref_account_project(id_account,id_project,user_state, user_permission)
													VALUES (arg_account_index,cur_project_id,1, 1);
				ELSE
					INSERT INTO public.ref_account_project(id_account,id_project, user_permission)
													VALUES (arg_account_index,cur_project_id, 1);
				END IF;

				tb_code := 0;
			    tb_project_key := v_random_string;
			    tb_project_id := cur_project_id;
			    tb_workspace_id := v_workspace_index;

				RETURN NEXT;

				EXCEPTION
					WHEN SQLSTATE '23505' THEN
						tb_code := -102;
						RETURN NEXT;
			END;
		ELSE
			tb_code := -101;
			RETURN NEXT;
		END IF;
	ELSE
		tb_code := -100;
		RETURN NEXT;
	END IF;
END;
$$;

